{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categorias","categoria","ReactDOM","render","document","getElementById"],"mappings":"oMAyCeA,EArCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAoBzC,OACI,mCACA,sBAAMC,SAdW,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAtBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,8BCTlBG,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAWH,GAD9C,+DAEII,MAAMF,GAFV,cAEdG,EAFc,gBAGGA,EAAUC,OAHb,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAebM,GAfa,4CAAH,sDCcNO,EAZK,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAI3B,OACI,sBAAKc,UAAU,6CAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAKA,EAAL,WCmBIO,EAxBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAwBxC,OAjBAC,qBAAU,WAENxB,EAAUC,GACLwB,MAAM,SAAAC,GAGHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMtB,CAACpB,IAGGqB,EDrByBK,CAAc1B,GAAjCa,EAFiB,EAEvBN,KAAca,EAFS,EAETA,QAErB,OACI,qCACI,qBAAIJ,UAAU,wCAAd,cAAwDhB,EAAxD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,wBAAC,EAAD,2BACKA,GADL,IAEAiB,IAAMjB,EAAIC,eEkBvBiB,EAjCM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAUvB,OACI,qCACI,mDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEQ4C,EAAWpB,KAAK,SAAAqB,GAAS,OACrB,cAAC,EAAD,CACI9B,SAAW8B,GACLA,Y,MCpBlCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2587a270.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ( { setCategorias } ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategorias( cat => [ inputValue, ...cat ] );\r\n            setInputValue('');\r\n        } \r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        <>  \r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type='text'\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />  \r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","export const getGifts = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=Ew8o1qBaW7sSCboDVzzOIHHo9TlKsW7S`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n\r\n    //console.log(gifs);\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ( { title, url } ) => {\r\n    \r\n    //console.log({title,url});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n           <img src={ url } alt={ title } />\r\n           <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ( {category} ) => {\r\n    \r\n    const {data: images, loading} = useFetchGifs( category ); //los \":\" dentro de la desustruracion de un atributo es para darle un alias\r\n      \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInLeft\"> {category} </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                    { \r\n                        images.map( img => (\r\n                            <GifGridItem  \r\n                            { ...img } \r\n                            key={ img.id }\r\n                            />\r\n                        ) ) \r\n                    } \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifts( category )\r\n            .then( imgs => {\r\n\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n\r\n            })\r\n        \r\n    }, [category])\r\n\r\n\r\n    return state; //{ data:[], loading: true }\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['One Punch']);\r\n\r\n    /*const handleApp = () => {\r\n        setCategorias( cat => [...cat, 'teorico de Culiacan'] );\r\n    }*/\r\n\r\n   \r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp Prro</h2>\r\n            <AddCategory setCategorias={ setCategorias }/>\r\n            <hr/>\r\n\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( categoria => (\r\n                        <GifGrid \r\n                            category={ categoria }\r\n                            key={ categoria } \r\n                        />\r\n                    ) )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}